The Global Surface Water Explorer is a simple web-mapping tool that shows all of the water datasets and allows users to navigate the globe 
visualizing the water datasets without installing any software. It also allows users to view the complete history of water detections over 
the 35-year period by clicking on the map. The tool is intended as a data viewer and does not provide any analytical features - if you 
would like to do your own analysis on the data then access the data using Data Download or Google Earth Engine.


var occurrence = gsw.select('occurrence');
var change = gsw.select("change_abs");
var transition = gsw.select('transition');
var roi = geometry;
var VIS_OCCURRENCE = {
 min: 0,
 max: 100,
 palette: ['red', 'blue']
};
var VIS_CHANGE = {
  min: -50,
  max: 50,
  palette: ['red', 'black', 'limegreen']
 };
 var VIS_WATER_MASK = {
 palette: ['white', 'black']
};
function createFeature(transition_class_stats) {
  transition_class_stats = ee.Dictionary(transition_class_stats);
  var class_number = transition_class_stats.get('transition_class_value');
  var result = {
    transition_class_number: class_number,
    transition_class_name: lookup_names.get(class_number),
    transition_class_palette: lookup_palette.get(class_number),
    area_m2: transition_class_stats.get('sum')
  };return ee.Feature(null, result);   // Creates a feature without a geometry.
}
// https://developers.google.com/chart/interactive/docs/gallery/piechart
 function createPieChartSliceDictionary(fc) {
  return ee.List(fc.aggregate_array("transition_class_palette")).map(function(p) { return {'color': p}; }).getInfo();
}
// Create a dictionary for looking up names of transition classes.
var lookup_names = ee.Dictionary.fromLists(
    ee.List(gsw.get('transition_class_values')).map(ee.String),
    gsw.get('transition_class_names')
);
// Create a dictionary for looking up colors of transition classes.
var lookup_palette = ee.Dictionary.fromLists(
    ee.List(gsw.get('transition_class_values')).map(ee.String),
    gsw.get('transition_class_palette')
);
// Create a water mask layer, and set the image mask so that non-water areas are transparent.
var water_mask = occurrence.gt(90).mask(1);
// Generate a histogram object and print it to the console tab.
var histogram = ui.Chart.image.histogram({
  image: change,
  region: roi,
  scale: 30,
  minBucketWidth: 10
});
histogram.setOptions({
  title: 'Histogram of surface water change intensity.'
});
print(histogram);
// Summarize transition classes in a region of interest.
var area_image_with_transition_class = ee.Image.pixelArea().addBands(transition);
var reduction_results = area_image_with_transition_class.reduceRegion({
  reducer: ee.Reducer.sum().group({
    groupField: 1,
    groupName: 'transition_class_value',
  }),
  geometry: roi,
  scale: 30,
  bestEffort: true,
});
print('reduction_results', reduction_results);
var roi_stats = ee.List(reduction_results.get('groups'));
var transition_fc = ee.FeatureCollection(roi_stats.map(createFeature));
print('transition_fc', transition_fc);
// Add a summary chart.
var transition_summary_chart = ui.Chart.feature.byFeature({
    features: transition_fc,
    xProperty: 'transition_class_name',
    yProperties: ['area_m2', 'transition_class_number']
  })
  .setChartType('PieChart')
  .setOptions({
    title: 'Summary of transition class areas',
    slices: createPieChartSliceDictionary(transition_fc),
    sliceVisibilityThreshold: 0  // Don't group small slices.
  });
print(transition_summary_chart);
Map.setCenter(105.26, 11.2134, 9);     // Mekong River Basin, SouthEast Asia
Map.addLayer({
  eeObject: water_mask,
  visParams: VIS_WATER_MASK,
  name: '90% occurrence water mask',
  shown: false
});
Map.addLayer({
  eeObject: occurrence.updateMask(occurrence.divide(100)),
  name: "Water Occurrence (1984-2015)",
  visParams: VIS_OCCURRENCE,
  shown: false
});
Map.addLayer({
  eeObject: change,
  visParams: VIS_CHANGE,
  name: 'occurrence change intensity',
  shown: false
});
Map.addLayer({
  eeObject: transition,
  name: 'Transition classes (1984-2015)',
  shown: false
});
// Create a circle by drawing a 20000 meter buffer around a point.
var roi = ee.Geometry.Point([104.94384982098381,15.172412716077416]).buffer(100000);
Map.addLayer(roi, {}, 'roi')
Map.addLayer({
  eeObject: occurrence.updateMask(occurrence.divide(100))
  .clip(roi),
  name: "Clipped",
  visParams: VIS_OCCURRENCE,
  //shown: false
});
